{"version":3,"sources":["Components/FormContacts/FormContacts.module.css","Components/FormContacts/FormContacts.jsx","Components/Filter/Filter.jsx","Components/ContactItem/ContactItem.jsx","Components/ListContacts/ListContacts.jsx","App.js","index.js"],"names":["module","exports","FormContacts","state","name","number","handleChange","target","value","setState","handleSubmit","event","preventDefault","props","onSubmit","reset","this","className","s","form","type","onChange","disabled","Component","Filter","ContactItem","contact","onDelete","id","onClick","handleDelete","ListContacts","contacts","map","App","filter","find","item","toLowerCase","alert","shortid","generate","changeFilter","handlerDelete","contactId","prevState","localStorage","getItem","parsedСontacts","JSON","parse","nextСontacts","setItem","stringify","normalizedFilter","contactsToShow","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1b85ce8b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FormContacts_form__y5OUm\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './FormContacts.module.css';\n\nclass FormContacts extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    if (this.state.name === '') {\n      return;\n    }\n\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit} className={s.form}>\n        <label className=\"label\">\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleChange}\n            className=\"input\"\n          />\n        </label>\n        <label className=\"label\">\n          Phone Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={this.handleChange}\n            className=\"input\"\n          />\n        </label>\n        <button\n          type=\"submit\"\n          disabled={name === '' || number === '' ? true : false}\n          className=\"btn\"\n        >\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default FormContacts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ value, onChange }) => (\n  <div className=\"container\">\n    <label className=\"label\">\n      Find contacts by name\n      <input type=\"text\" value={value} onChange={onChange} className=\"input\" />\n    </label>\n  </div>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ContactItem = ({ contact, onDelete }) => {\n  const { id, number, name } = contact;\n\n  const handleDelete = id => onDelete(id);\n\n  return (\n    <li key={id} id={id} className=\"contact\">\n      <p>\n        {name}: {number}\n      </p>\n      <button type=\"button\" className=\"btn\" onClick={() => handleDelete(id)}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.object.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import React from 'react';\nimport ContactItem from '../ContactItem';\n\nimport PropTypes from 'prop-types';\n\nconst ListContacts = ({ contacts, onDelete }) => {\n  return (\n    <ul className=\"container list\">\n      {contacts.map(contact => (\n        <ContactItem key={contact.id} contact={contact} onDelete={onDelete} />\n      ))}\n    </ul>\n  );\n};\n\nListContacts.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default ListContacts;\n","import React, { Component } from 'react';\n\nimport FormContacts from './Components/FormContacts/FormContacts';\nimport Filter from './Components/Filter/Filter';\nimport ListContacts from './Components/ListContacts/ListContacts';\nimport shortid from 'shortid';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedСontacts = JSON.parse(contacts);\n\n    if (parsedСontacts) {\n      this.setState({ contacts: parsedСontacts });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    const nextСontacts = this.state.contacts;\n    const prevСontacts = prevState.contacts;\n\n    if (nextСontacts !== prevСontacts) {\n      localStorage.setItem('contacts', JSON.stringify(nextСontacts));\n    }\n  }\n\n  handleSubmit = ({ name, number }) => {\n    const isInContacts = this.state.contacts.find(\n      item => item.name.toLowerCase() === name.toLowerCase(),\n    );\n    if (isInContacts) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n\n  changeFilter = event => {\n    const { value } = event.target;\n\n    this.setState({\n      filter: value,\n    });\n  };\n\n  handlerDelete = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n\n    const normalizedFilter = this.state.filter.toLowerCase();\n    const contactsToShow = this.state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n\n    return (\n      <>\n        <h1 className=\"title\">Phonebook</h1>\n        <FormContacts onSubmit={this.handleSubmit} />\n\n        <h2 className=\"title\">Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n\n        <ListContacts contacts={contactsToShow} onDelete={this.handlerDelete} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}